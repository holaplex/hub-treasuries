//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0
use sea_orm::entity::prelude::*;

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "tx_type")]
pub enum TxType {
    #[sea_orm(string_value = "create_drop")]
    CreateDrop,
    #[sea_orm(string_value = "mint_edition")]
    MintEdition,
    #[sea_orm(string_value = "transfer_mint")]
    TransferMint,
    #[sea_orm(string_value = "update_metadata")]
    UpdateMetadata,
    #[sea_orm(string_value = "create_collection")]
    CreateCollection,
    #[sea_orm(string_value = "mint_to_collection")]
    MintToCollection,
    #[sea_orm(string_value = "switch_collection")]
    SwitchCollection,
}

impl From<TxType> for String {
    fn from(value: TxType) -> Self {
        match value {
            TxType::CreateDrop => "CreateDrop".to_string(),
            TxType::MintEdition => "MintEdition".to_string(),
            TxType::TransferMint => "TransferMint".to_string(),
            TxType::UpdateMetadata => "UpdateMetadata".to_string(),
            TxType::CreateCollection => "CreateCollection".to_string(),
            TxType::MintToCollection => "MintToCollection".to_string(),
            TxType::SwitchCollection => "SwitchCollection".to_string(),
        }
    }
}
